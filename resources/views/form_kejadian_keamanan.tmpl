{{ define "form_kejadian_keamanan.tmpl"}}

{{ template "templates/layout.tmpl" .}}

    <form id="form-kejadian-keamanan" action="{{.kejadianKeamananURL}}" method="post" enctype="multipart/form-data">
        <div class="card-body col-md-12 col-lg-12">
            <div class="card card-custom gutter-b">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-6">
                            <input type="hidden" id="latitude" name="latitude" />
                            <input type="hidden" id="longitude" name="longitude" />
                            <input type="hidden" id="nik" name="nik" value="{{.data.nik}}" />
                            <input type="hidden" id="id_kejadian_keamanan" name="id_kejadian_keamanan" value="" />
                            <div class="form-group row mb-1">
                                <div class="col-12">
                                    <label class="mb-0"><h5>Data Kejadian</h5></label>
                                    <hr class="mt-1">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="tanggal_kejadian">Tanggal</label>
                                <div class="col-sm-8">
                                    <input type="date" id="tanggal_kejadian" name="tanggal" class="form-control form-control-sm" required
                                    oninput="setCustomValidity('')" oninvalid="this.setCustomValidity('Pilih tanggal kejadian.')">
                                </div>
                                <script>
                                    document.getElementById('tanggal_kejadian').max = new Date().toISOString().split('T')[0]; 
                                </script>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="jenis_pelanggaran">Jenis Pelanggaran</label>
                                <div class="col-sm-8">
                                    <select name="jenis_kejadian_id" id="jenis_pelanggaran" 
                                        class="form-control form-control-sm select2_jenis_pelanggaran"
                                        data-placeholder="Pilih Jenis Pelanggaran"
                                        oninvalid="this.setCustomValidity('Pilih jenis pelanggaran.')" required>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="nama_kapal">Nama Kapal</label>
                                <div class="col-sm-8">
                                    <input type="text" id="nama_kapal" name="nama_kapal" class="form-control form-control-sm auto-width" required
                                    oninput="setCustomValidity('')" oninvalid="this.setCustomValidity('Nama kapal harus diisi. Jika kosong isi dengan `-`')">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="imo_kapal">IMO Kapal</label>
                                <div class="col-sm-8">
                                    <input type="number" 
                                        id="imo_kapal" 
                                        name="imo_kapal" 
                                        class="form-control form-control-sm" 
                                        required
                                        min="0000000" 
                                        max="9999999"
                                        pattern=".{7,7}"
                                        value="0000000"
                                        oninput="this.value = this.value.slice(0, 7)"
                                        oninvalid="this.setCustomValidity(this.value.length != 7 ? 'IMO kapal harus 7 digit angka!')">
                                    <small class="text-danger error-text" id="imo_error"></small>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="mmsi_kapal">MMSI Kapal</label>
                                <div class="col-sm-8">
                                    <input type="number" 
                                        id="mmsi_kapal" 
                                        name="mmsi_kapal" 
                                        class="form-control form-control-sm" 
                                        required
                                        min="000000000" 
                                        max="999999999"
                                        pattern=".{9,9}"
                                        value="000000000"
                                        oninput="this.value = this.value.slice(0, 9)"
                                        oninvalid="this.setCustomValidity(this.value.length != 9 ? 'MMSI kapal harus 9 digit angka!')">
                                    <small class="text-danger error-text" id="mmsi_error"></small>
                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="asal">Pelabuhan Asal</label>
                                <div class="col-sm-8">
                                    <input type="text" id="asal" name="asal" class="form-control form-control-sm auto-width" required
                                    oninput="setCustomValidity('')" oninvalid="this.setCustomValidity('Pelabuhan asal harus diisi. Jika kosong isi dengan `-`')">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="bendera">Negara</label>
                                <!-- Replace the existing bendera input with this select -->
                                <div class="col-sm-8">
                                    <select id="bendera" name="bendera" class="form-control form-control-sm select2_bendera" required
                                        oninput="setCustomValidity('')" 
                                        oninvalid="this.setCustomValidity('Pilih negara. Jika kosong isi dengan `-`')">
                                        <option value="-"> - </option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="tujuan">Pelabuhan Tujuan</label>
                                <div class="col-sm-8">
                                    <input type="text" id="tujuan" name="tujuan" class="form-control form-control-sm auto-width" required
                                    oninput="setCustomValidity('')" oninvalid="this.setCustomValidity('Pelabuhan tujuan harus diisi. Jika kosong isi dengan `-`')">
                                </div>
                            </div>

                            <div class="form-group row mb-1 mt-4">
                                <div class="col-12">
                                    <label class="mb-0"><h5>Keterangan Kejadian</h5></label>
                                    <hr class="mt-1">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="muatan">Muatan</label>
                                <div class="col-sm-8">
                                    <textarea id="muatan" name="muatan" class="form-control form-control-sm" required 
                                    style="font-size:1em;" oninput="setCustomValidity('')" oninvalid="this.setCustomValidity('Muatan harus diisi. Jika kosong isi dengan `-`')"></textarea>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="tindak_lanjut">Tindak Lanjut</label>
                                <div class="col-sm-8">
                                    <textarea id="tindak_lanjut" name="tindak_lanjut" class="form-control form-control-sm" required 
                                    style="font-size:1em;" oninput="setCustomValidity('')" oninvalid="this.setCustomValidity('Tindak lanjut harus diisi. Jika kosong isi dengan `-`')"></textarea>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="informasi_kategori">Informasi Tambahan</label>
                                <div class="col-sm-8">
                                    <textarea id="informasi_kategori" name="informasi_kategori" class="form-control form-control-sm" required 
                                    style="font-size:1em;" oninput="setCustomValidity('')" oninvalid="this.setCustomValidity('Informasi tambahan harus diisi. Jika kosong isi dengan `-`')"></textarea>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="sumber_berita">Instansi Penindak</label>
                                <div class="col-sm-8">
                                    <input type="text" id="sumber_berita" name="sumber_berita" class="form-control form-control-sm auto-width" required
                                    oninput="setCustomValidity('')" oninvalid="this.setCustomValidity('Instansi penindak harus diisi. Jika kosong isi dengan `-`')">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="link_berita">Sumber Link Berita</label>
                                <div class="col-sm-8">
                                    <textarea id="link_berita" name="link_berita" class="form-control form-control-sm" required 
                                    style="font-size:1em; min-height:100px; overflow:hidden; resize:none;" 
                                    oninput="setCustomValidity('')" 
                                    oninvalid="this.setCustomValidity('Link berita harus diisi. Jika kosong isi dengan `-`')"></textarea>
                                    <small class="text-danger error-text" id="link_berita_error"></small>
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="kategori_sumber">Kategori Sumber</label>
                                <div class="col-sm-8">
                                    <select name="kategori_sumber" id="kategori_sumber" data-error="Pilih Kategori Sumber" class="form-control form-control-sm" required>
                                        <option value="Media Online"> Media Online </option>
                                        <option value="Puldata"> Puldata </option>
                                        <option value="Media Online dan Puldata"> Media Online dan Puldata </option>
                                        <option value="Media Online dan KPIML" selected> Media Online dan KPIML </option>
                                        <option value="Media Online dan Operasi"> Media Online dan Operasi </option>
                                    </select>
                                </div>
                            </div>
                        </div>

                        <div class="col-md-6">
                            <div class="form-group row">
                                <div class="col-sm-6">
                                    <div class="input-group">
                                        <input type="text" name="cari_lokasi" id="cari_lokasi" class="form-control bg-light border-0 small auto-width"  placeholder="Cari Lokasi" aria-label="Search" aria-describedby="basic-addon2">
                                        <div class="input-group-append">
                                            <button onclick="search_location(); return false;" class="btn btn-primary" type="button">
                                                <i class="fas fa-search fa-sm"></i>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                

                                <div class="ml-auto">
                                    <div class="form-inline">
                                        <select class="custom-select my-1 mr-sm-2" name="zona" id="zona" 
                                        oninvalid="this.setCustomValidity('Pilih zona')" required>
                                            <option value="" selected disabled hidden> Pilih Zona </option>
                                            <option value="BARAT"> Barat </option>
                                            <option value="TENGAH"> Tengah </option>
                                            <option value="TIMUR"> Timur </option>
                                        </select>
                                    </div>
                                </div>
                                
                            </div>

                            <div id="map_location" style="border:1px solid #CCC; height:420px;"></div>
                            <div class="form-group row">
                                <div class="col-sm-12">
                                    <input type="text" style="text-align: center" id="koordinat" name="koordinat" readonly="readonly" 
                                    class="form-control form-control-sm" required
                                    oninput="setCustomValidity('')"
                                    oninvalid="this.setCustomValidity('Koordinat harus diisi.')">
                                </div>
                            </div>

                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="lokasi_kejadian">Lokasi Kejadian</label>
                                <div class="col-sm-8">
                                   <input type="text" id="lokasi_kejadian" name="lokasi_kejadian" class="form-control form-control-sm" required
                                    oninput="setCustomValidity('')" 
                                    oninvalid="this.setCustomValidity('Lokasi kejadian harus diisi.')">
                                </div>
                            </div>
                            <div class="form-group row">
                                <label class="col-sm-4 col-form-label" for="files">Image</label>
                                <div class="col-sm-8">
                                    <input type="file" id="file_input" name="files" accept="image/*" multiple>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-12">
                                    <div id="file-list" class="mt-2"></div>
                                </div>
                            </div>
                        </div>
                        <!-- /.box-body -->
                    </div>
                </div>
            </div>
        </div>
        <div class="card-footer text-right">
            <button type="submit" class="btn btn-primary">Save</button>
            <button type="button" id="btn_batal" class="btn btn-danger" onclick="document.location='/kejadian/keamanan'">Cancel</button>
        </div>
        <!-- /.box-footer -->
    </form>

    {{ template "layouts/footer.tmpl" . }}

 {{ template "layouts/script.tmpl" . }}

    <link href="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/css/select2.min.css" rel="stylesheet" />
    <script src="https://cdn.jsdelivr.net/npm/select2@4.1.0-rc.0/dist/js/select2.min.js"></script>
    <script async src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAeQVXtdaEgd0Cfvjy41mjGZ6_f5thMVt4&loading=async&language=id&callback=initMap"></script>
    
    {{ template "layouts/script_form_map.tmpl" . }}

    <script>
        getJenisPelanggaran();

        function getJenisPelanggaran() {
            $.ajax({
                url: window.location.origin + '/api/kejadian/listKejadian',
                type: 'POST',
                headers: {
                    'Authorization': 'Bearer ' + {{.data.token.access_token}}
                },
                data: {
                    klasifikasi_name: "Keamanan Laut"
                },
                success: function(response) {
                    $("#jenis_pelanggaran").empty();
                    var awal = `<option value="" selected disabled hidden> Pilih </option>`
                    $("#jenis_pelanggaran").append(awal);

                    response.data.data_jenis_kejadian.forEach((x, i) => {
                        $("#jenis_pelanggaran").append("<option value='" + x.id_jenis_kejadian + "'>" + x.nama_kejadian + "</option>");
                    });

                },
                error: function(response) {
                    Swal.fire('Gagal!', 'Data Tidak Ada!!', 'error');
                }
            });
        }
    </script>

    <script>
        // Auto-resize textarea function
        function autoResize(textarea) {
            textarea.style.height = 'auto';
            textarea.style.height = textarea.scrollHeight + 'px';
        }

        // Apply to all textareas
        document.querySelectorAll('textarea').forEach(textarea => {
            textarea.addEventListener('input', function() {
                autoResize(this);
            });
            // Initial resize
            autoResize(textarea);
        });

        // Add this script to handle custom validation messages
        document.querySelectorAll('input,textarea, select').forEach(element => {

            // Create error span for each input
            const errorSpan = document.createElement('span');
            errorSpan.className = 'text-danger error-message';
            element.parentNode.appendChild(errorSpan);

            // Handle validation
            element.addEventListener('invalid', function(e) {
                e.preventDefault();

                // Check if element has value for Select2
                if ($(this).hasClass('select2_jenis_pelanggaran') || $(this).hasClass('select2_bendera')) {
                    if (this.value) {
                        $(this).next('.select2-container').find('.select2-selection').removeClass('is-invalid');
                        $(this).siblings('.error-message').text('');
                        return;
                    }
                }

                const errorMessage = this.validationMessage;

                // Handle Select2 validation
                if ($(this).hasClass('select2_jenis_pelanggaran') || $(this).hasClass('select2_bendera')) {
                    $(this).next('.select2-container').find('.select2-selection').addClass('is-invalid');
                    $(this).siblings('.error-message').text(errorMessage);
                } else {
                    this.nextElementSibling.textContent = errorMessage;
                }

                // Clear error on input/change
                $(element).on('change select2:select', function() {
                    if ($(this).hasClass('select2_jenis_pelanggaran') || $(this).hasClass('select2_bendera')) {
                        $(this).next('.select2-container').find('.select2-selection').removeClass('is-invalid');
                    }
                    $(this).siblings('.error-message').text('');
                    this.setCustomValidity('');
                });

                element.addEventListener('input', function() {
                    // Clear error message
                    this.classList.remove('is-invalid');
                    const errorSpan = this.nextElementSibling;
                    if (errorSpan && errorSpan.classList.contains('error-message')) {
                        errorSpan.textContent = '';
                    }
                    // Clear custom validity
                    this.setCustomValidity('');
                });
            });
        });

        // Add CSS for error messages
        const style = document.createElement('style');
        style.textContent = `
            .error-message {
                display: block;
                font-size: 12px;
                margin-top: 5px;
            }
        `;
        document.head.appendChild(style);
        
        $('.select2_bendera').select2({
            language: {
                inputTooShort: function() {
                    return "Silahkan Masukkan 1 atau lebih karakter";
                }
            },
            placeholder: 'Pilih Negara',
            allowClear: true,
            minimumInputLength: 1,
            data: [{ id: '-', text: '-' }], // Add default option
            ajax: {
                url: function(params) {
                    return 'https://restcountries.com/v3.1/name/' + params.term;
                },
                dataType: 'json',
                delay: 250,
                data: function(params) {
                    return {
                        search: params.term
                    };
                },
                processResults: function(data) {
                    let results = [{ id: '-', text: '-' }]; // Include default option
                    results = results.concat(data.map(function(item) {
                        return {
                            id: item.name.common,
                            text: item.name.common,
                            flag: item.flags.png
                        };
                    }).sort((a, b) => a.text.localeCompare(b.text)));
                    return { results };
                },
                cache: true
            },
            templateResult: function(data) {
                if (!data.flag) return data.text;
                return $(`<span><img src="${data.flag}" style="width:20px; margin-right:10px"/> ${data.text}</span>`);
            },
            templateSelection: function(data) {
                if (!data.flag) return data.text;
                return $(`<span><img src="${data.flag}" style="width:20px; margin-right:10px"/> ${data.text}</span>`);
            }
        });
            
        $('.select2_jenis_pelanggaran').select2();
    
        const linkBeritaTextarea = document.getElementById('link_berita');

        linkBeritaTextarea.addEventListener('input', function() {
            $("#link_berita_error").text("")
             // Add bullet point if textarea is empty
            if (this.value === '') {
                this.value = '• ';
                // Set cursor position after bullet point
                this.selectionStart = this.selectionEnd = this.value.length;
            }
            
            this.style.height = 'auto';
            this.style.height = this.scrollHeight + 'px';
        });

        linkBeritaTextarea.addEventListener('keydown', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                const cursorPosition = this.selectionStart;
                const currentValue = this.value;
                const newValue = currentValue.slice(0, cursorPosition) + '\n• ' + currentValue.slice(cursorPosition);
                this.value = newValue;
                this.selectionStart = this.selectionEnd = cursorPosition + 3;
            }
        });

        var id_kejadian_keamanan = {{.idKejadianKeamanan}};
        var jenisPelanggaranSelected = null;
    </script>

    {{ template "layouts/script_upload_image.tmpl" . }}

    <script>
        async function getKejadianKeamanan(id) {
            try {
                const response = await $.ajax({
                    url: window.location.origin + {{ .getKejadianKeamananURL }} + "?id_kejadian_keamanan=" + id,
                    type: 'GET',
                    headers: {
                        'Authorization': 'Bearer ' + {{.data.token.access_token}}
                    }
                });

                const data = response.data.data_kejadian_keamanan;
                if (data !== null) {
                    $("#id_kejadian_keamanan").val(data.id_kejadian_keamanan);
                    $("#tanggal_kejadian").val(data.tanggal);
                    
                    $("#jenis_pelanggaran").val(data.jenis_kejadian_id).trigger('change');
                    $("#jenis_pelanggaran").prop('disabled',true);
                    $("#nama_kapal").val(data.nama_kapal);
                    $("#sumber_berita").val(data.sumber_berita);
                    const links = data.link_berita.split('\n');
                    const bulletPoints = links.map(link => `• ${link}`).join('\n');
                    $("#link_berita").val(bulletPoints);

                    linkBeritaTextarea.style.height = 'auto';
                    linkBeritaTextarea.style.height = linkBeritaTextarea.scrollHeight + 'px';

                    $("#cari_lokasi").val(`${data.latitude} ${data.longitude}`);
                    $("#lokasi_kejadian").val(data.lokasi_kejadian);
                    
                    let coordinates = $('#cari_lokasi').val().split(' ');

                    $("#muatan").val(data.muatan);
                    $("#asal").val(data.asal);

                    // Fetch and set the flag
                   fetch(`https://restcountries.com/v3.1/name/${data.bendera}`)
                        .then(response => {
                            if (!response.ok) {
                                throw new Error('Country not found');
                            }
                            return response.json();
                        })
                        .then(response => {
                            if(data.bendera == "-"){
                                $("#bendera").val(data.bendera).trigger('change');
                                return
                            }
                            if (response && response.length > 0) {
                                let flagUrl = response[0].flags.png;
                                let datas = {
                                    id: data.bendera,
                                    text: data.bendera,
                                    flag: flagUrl
                                }
                                // Add option data with custom format for Select2
                                let newOption = new Option(datas.text, datas.id, true, true);
                                $('#bendera').append(newOption);

                                // Initialize Select2 with custom format
                                $('#bendera').select2({
                                    templateResult: formatOption,
                                    templateSelection: formatOption
                                }).trigger('change');

                                // Function to format the options with flag images
                                function formatOption(option) {
                                    if (!option.id) return option.text;
                                    let flagImg = `<img src="${datas.flag}" style="width:20px; margin-right:10px"/>`;
                                    return $(`<span>${flagImg} ${option.text}</span>`);
                                }
                            }
                        })

                    // Disable the select after setting value
                    $("#bendera").prop('disabled', true);

                    $("#tujuan").val(data.tujuan);
                    $("#kategori_sumber").val(data.kategori_sumber);
                    $("#tindak_lanjut").val(data.tindak_lanjut);
                    $("#imo_kapal").val(data.imo_kapal);
                    $("#mmsi_kapal").val(data.mmsi_kapal);
                    $("#informasi_kategori").val(data.informasi_kategori);
                    $("#zona").val(data.zona);

                    let coordinateLatlng = new google.maps.LatLng(
                        parseFloat(coordinates[0]), 
                        parseFloat(coordinates[1])
                    );
                    handleLocation(coordinateLatlng);

                    const container = new DataTransfer();

                    for (const file of data.file_image) {
                        const imgBlob = await getImgURLPromise(file);
                        const fileName = file.filename;
                        const newFile = new File([imgBlob], fileName, { type: "image/jpeg", lastModified: new Date().getTime() }, 'utf-8');
                        container.items.add(newFile);
                    }

                    fileInput.files = container.files;
                    updateFileList();
                }
            } catch (error) {
                console.log(error);
            }
        }
        if (id_kejadian_keamanan !== null && id_kejadian_keamanan !== "" && id_kejadian_keamanan !== "<nil>") {
            getKejadianKeamanan(id_kejadian_keamanan);
        }

        $(document).ready(function() {
            $("#form-kejadian-keamanan").submit(function(e) {
                console.log("Form submitted");
                e.preventDefault();

                // Clear previous error messages
                $("#imo_error").text("");
                $("#mmsi_error").text("");
                $("#link_berita_error").text("");

                // Get IMO value
                const imoValue = $("#imo_kapal").val();
        
                // Validate IMO length
                if (imoValue.length !== 7) {
                    $("#imo_error").text("IMO Kapal harus 7 digit angka");
                     $("#imo_kapal")[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                    return false;
                }
            
                // Get MMSI value  
                const mmsiValue = $("#mmsi_kapal").val();
            
                // Validate MMSI length
                if (mmsiValue.length !== 9) {
                    $("#mmsi_error").text("MMSI Kapal harus 9 digit angka"); 
                    $("#mmsi_kapal")[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                    return false;
                }

                var formData = new FormData(this);
                
                // Get textarea content and process bullet points
                let linkBeritaContent = $('#link_berita').val();
                let items = linkBeritaContent.split('\n')
                    .map(item => item.trim().replace(/^[•]\s*/, ''))  // Using regex to match bullet at start
                    .filter(Boolean);
                let processedContent = items.join('\n');

                if (processedContent === ''){
                    $("#link_berita_error").text("Link berita harus diisi. Jika kosong isi dengan `-`");
                    $("#link_berita")[0].scrollIntoView({ behavior: 'smooth', block: 'center' });
                    return false;
                }
                
                formData.set('link_berita', processedContent);
                formData.append("jenis_kejadian_id", $('#jenis_pelanggaran').val());

                $.ajax({
                    url: $(this).attr("action"),
                    method: "POST",
                    headers: {
                        'Authorization': 'Bearer ' + {{.data.token.access_token}}
                    },
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function(response) {
                        Swal.fire('Success!', response.data.message, response.status).then(() => {
                           window.location.href = '/kejadian/keamanan';
                        });
                    },
                    error: function(response) {
                        Swal.fire('Gagal!', response.responseJSON.message, 'error');
                    }
                });
            });
        });
    </script>

{{ end }}
